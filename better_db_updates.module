<?php

/**
 * @file
 * Core functions for the Better db Update API module.
 */

/**
 * Implements hook_batch_alter().
 */
function better_db_updates_batch_alter(&$batch) {
  $update_finish_callbacks = [
    'drush_update_finished',
    ['\Drupal\system\Controller\DbUpdateController', 'batchFinished'],
  ];
  foreach ($batch['sets'] as $set_id => $set) {
    // If batch is generated by 'drush updb' or update.php, ensure that the
    // Persistent Update hooks are always run.
    if (isset($set['finished']) && in_array($set['finished'], $update_finish_callbacks)) {
      foreach ($set['operations'] as $operation_id => $operation) {
        if ($operation[1][0] == 'better_db_updates' && $operation[1][1] == 8001) {
          $batch['sets'][$set_id]['operations'][$operation_id][0] = 'better_db_updates_update_8001';
        }
      }
    }
  }
}

/**
 * Implements hook_better_db_updates_directory().
 */
function better_db_updates_better_db_updates_directory() {
  return 'updates';
}

/**
 * Get all better db updates.
 *
 * @return array
 */
function better_db_updates_get_updates() {
  $directories = array();

  foreach (\Drupal::moduleHandler()->getImplementations('better_db_updates_directory') as $module) {
    $function = $module . '_better_db_updates_directory';
    $result = $function();
    if ($result && is_string($result)) {
      $directories[$module] = drupal_get_path('module', $module) . '/' . $result;
    }
  }

  $all_files = array();

  $extension = 'inc';
  foreach ($directories as $module => $path) {
    $all_files[$module] = file_scan_directory($path, '/\.' . $extension . '$/', array('key' => 'name'));
  }

  return $all_files;
}

/**
 * Get doc block from a given file.
 *
 * @param $file
 * @return string
 */
function better_db_updates_get_file_doc_block($file) {
  $doc_comments = array_filter(
    token_get_all(file_get_contents($file)), function($entry) {
      return $entry[0] == T_DOC_COMMENT;
    }
  );

  $file_doc_comment = array_shift($doc_comments);

  return $file_doc_comment[1];
}

/**
 * Parse a given doc block and return the description text.
 *
 * @param $docblock
 * @return string
 */
function better_db_updates_parse_block($docblock) {
  $description = '';

  // split at each line
  foreach (preg_split("/(\r?\n)/", $docblock) as $line){
    // if starts with an asterisk
    if (preg_match('/^(?=\s+?\*[^\/])(.+)/', $line, $matches)) {
      $info = $matches[1];

      // remove wrapping whitespace
      $info = trim($info);
      // remove leading asterisk
      $info = preg_replace('/^(\*\s+?)/', '', $info);

      // if it doesn't start with an "@" symbol
      // then add to the description
      if ($info[0] !== "@") {
        $description .= "\n$info";
        continue;
      }
    }
  }

  return trim($description, "\n");
}
